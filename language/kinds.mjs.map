{"version":3,"file":"kinds.js","sourceRoot":"","sources":["../../src/language/kinds.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,IAAK,IAkEJ;AAlED,WAAK,IAAI;IACP,WAAW;IACX,qBAAa,CAAA;IAEb,eAAe;IACf,6BAAqB,CAAA;IACrB,oDAA4C,CAAA;IAC5C,kDAA0C,CAAA;IAC1C,sCAA8B,CAAA;IAC9B,uBAAe,CAAA;IACf,6BAAqB,CAAA;IACrB,8CAAsC,CAAA;IAEtC,gBAAgB;IAChB,0CAAkC,CAAA;IAClC,0CAAkC,CAAA;IAClC,kDAA0C,CAAA;IAE1C,aAAa;IACb,6BAAqB,CAAA;IACrB,wBAAgB,CAAA;IAChB,4BAAoB,CAAA;IACpB,8BAAsB,CAAA;IACtB,gCAAwB,CAAA;IACxB,0BAAkB,CAAA;IAClB,0BAAkB,CAAA;IAClB,0BAAkB,CAAA;IAClB,8BAAsB,CAAA;IACtB,oCAA4B,CAAA;IAE5B,iBAAiB;IACjB,+BAAuB,CAAA;IAEvB,YAAY;IACZ,gCAAwB,CAAA;IACxB,8BAAsB,CAAA;IACtB,qCAA6B,CAAA;IAE7B,8BAA8B;IAC9B,8CAAsC,CAAA;IACtC,6DAAqD,CAAA;IAErD,uBAAuB;IACvB,uDAA+C,CAAA;IAC/C,uDAA+C,CAAA;IAC/C,4CAAoC,CAAA;IACpC,uDAA+C,CAAA;IAC/C,6DAAqD,CAAA;IACrD,qDAA6C,CAAA;IAC7C,mDAA2C,CAAA;IAC3C,qDAA6C,CAAA;IAC7C,kEAA0D,CAAA;IAE1D,4BAA4B;IAC5B,oDAA4C,CAAA;IAE5C,6BAA6B;IAC7B,4CAAoC,CAAA;IAEpC,sBAAsB;IACtB,qDAA6C,CAAA;IAC7C,qDAA6C,CAAA;IAC7C,2DAAmD,CAAA;IACnD,mDAA2C,CAAA;IAC3C,iDAAyC,CAAA;IACzC,gEAAwD,CAAA;AAC1D,CAAC,EAlEI,IAAI,KAAJ,IAAI,QAkER;AAED,OAAO,EAAE,IAAI,EAAE,CAAC","sourcesContent":["/**\n * The set of allowed kind values for AST nodes.\n */\nenum Kind {\n  /** Name */\n  NAME = 'Name',\n\n  /** Document */\n  DOCUMENT = 'Document',\n  OPERATION_DEFINITION = 'OperationDefinition',\n  VARIABLE_DEFINITION = 'VariableDefinition',\n  SELECTION_SET = 'SelectionSet',\n  FIELD = 'Field',\n  ARGUMENT = 'Argument',\n  FRAGMENT_ARGUMENT = 'FragmentArgument',\n\n  /** Fragments */\n  FRAGMENT_SPREAD = 'FragmentSpread',\n  INLINE_FRAGMENT = 'InlineFragment',\n  FRAGMENT_DEFINITION = 'FragmentDefinition',\n\n  /** Values */\n  VARIABLE = 'Variable',\n  INT = 'IntValue',\n  FLOAT = 'FloatValue',\n  STRING = 'StringValue',\n  BOOLEAN = 'BooleanValue',\n  NULL = 'NullValue',\n  ENUM = 'EnumValue',\n  LIST = 'ListValue',\n  OBJECT = 'ObjectValue',\n  OBJECT_FIELD = 'ObjectField',\n\n  /** Directives */\n  DIRECTIVE = 'Directive',\n\n  /** Types */\n  NAMED_TYPE = 'NamedType',\n  LIST_TYPE = 'ListType',\n  NON_NULL_TYPE = 'NonNullType',\n\n  /** Type System Definitions */\n  SCHEMA_DEFINITION = 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION = 'OperationTypeDefinition',\n\n  /** Type Definitions */\n  SCALAR_TYPE_DEFINITION = 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION = 'ObjectTypeDefinition',\n  FIELD_DEFINITION = 'FieldDefinition',\n  INPUT_VALUE_DEFINITION = 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION = 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION = 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION = 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION = 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION = 'InputObjectTypeDefinition',\n\n  /** Directive Definitions */\n  DIRECTIVE_DEFINITION = 'DirectiveDefinition',\n\n  /** Type System Extensions */\n  SCHEMA_EXTENSION = 'SchemaExtension',\n\n  /** Type Extensions */\n  SCALAR_TYPE_EXTENSION = 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION = 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION = 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION = 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION = 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION = 'InputObjectTypeExtension',\n}\n\nexport { Kind };\n"]}