{"version":3,"file":"NoDeprecatedCustomRule.js","sourceRoot":"","sources":["../../../../src/validation/rules/custom/NoDeprecatedCustomRule.ts"],"names":[],"mappings":"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","sourcesContent":["import { invariant } from '../../../jsutils/invariant.js';\n\nimport { GraphQLError } from '../../../error/GraphQLError.js';\n\nimport type { ASTVisitor } from '../../../language/visitor.js';\n\nimport { getNamedType, isInputObjectType } from '../../../type/definition.js';\n\nimport type { ValidationContext } from '../../ValidationContext.js';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context: ValidationContext): ASTVisitor {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason = fieldDef?.deprecationReason;\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        invariant(parentType != null);\n        context.reportError(\n          new GraphQLError(\n            `The field ${parentType}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            { nodes: node },\n          ),\n        );\n      }\n    },\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason = argDef?.deprecationReason;\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n        if (directiveDef != null) {\n          context.reportError(\n            new GraphQLError(\n              `The argument \"@${directiveDef.name}(${argDef.name}:)\" is deprecated. ${deprecationReason}`,\n              { nodes: node },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          invariant(parentType != null && fieldDef != null);\n          context.reportError(\n            new GraphQLError(\n              `The argument \"${parentType}.${fieldDef.name}(${argDef.name}:)\" is deprecated. ${deprecationReason}`,\n              { nodes: node },\n            ),\n          );\n        }\n      }\n    },\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason = inputFieldDef?.deprecationReason;\n        if (deprecationReason != null) {\n          context.reportError(\n            new GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              { nodes: node },\n            ),\n          );\n        }\n      }\n    },\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason = enumValueDef?.deprecationReason;\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        invariant(enumTypeDef != null);\n        context.reportError(\n          new GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            { nodes: node },\n          ),\n        );\n      }\n    },\n  };\n}\n"]}